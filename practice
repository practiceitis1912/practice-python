#%%

# Q1
# Load dataset for GDP by country
df1 = pd.read_csv('https://stats.oecd.org/sdmx-json/data/DP_LIVE/.GDP.TOT.MLN_USD.A/OECD?contentType=csv&detail=code&separator=comma&csv-lang=en&startPeriod=2015')

# Drop unnecessary columns / rows, choose only latest GDP values (for year 2019)
df1 = df1[df1['TIME'] == 2019]
df1.drop(columns = ['INDICATOR', 'SUBJECT', 'MEASURE', 'TIME', 'FREQUENCY', 'Flag Codes'], inplace = True)
df1.drop(df1[(df1['LOCATION'] == 'CHN') | (df1['LOCATION'] == 'COL') | (df1['LOCATION'] == 'IDN') | (df1['LOCATION'] == 'OECDE') | (df1['LOCATION'] == 'EA19')].index, inplace = True) 

# Reset DataFrame index
df1.reset_index(drop = True, inplace = True)

df1.rename(columns = {'Value' : 'GDP (MILLION USD)'}, inplace = True)
df1.head()

#%%

# Q2
# Load dataset for unemployment rate by country
df2 = pd.read_csv('https://stats.oecd.org/sdmx-json/data/DP_LIVE/.UNEMP.TOT.PC_LF.Q/OECD?contentType=csv&detail=code&separator=comma&csv-lang=en&startPeriod=2018-Q2')

# Drop unnecessary columns / rows, choose only latest unemployment rates (for year 2019)
df2 = df2[df2['TIME'] == '2019-Q4']
df2.drop(columns = ['INDICATOR', 'SUBJECT', 'MEASURE', 'FREQUENCY', 'TIME', 'Flag Codes'], inplace = True)
df2.drop(df2[(df2['LOCATION'] == 'ZAF') | (df2['LOCATION'] == 'COL') | (df2['LOCATION'] == 'EA19')].index, inplace = True) 

# Reset DataFrame index
df2.reset_index(drop = True, inplace = True)

df2.rename(columns = {'Value' : 'UNEMPLOYMENT RATE (%)'}, inplace = True)
df2.head()

#%%

# Q3
# Select rows where unemployment rate > 8.5 using boolean indexing
df2[df2['UNEMPLOYMENT RATE (%)'] > 8.5]

#%%

# Q4

#%%


